version: '3'

services:
  frontend:
    container_name: frontend
    image: eyra/frontend:latest
    restart: "no"
    networks:
      - main
    environment:
      - "EYRA_BACKEND_URL=${EYRA_BACKEND_URL}"


  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    networks:
      - main
    expose:
      - 5672
    restart: "no"


  postgres:
    container_name: postgres
    hostname: postgres
    image: bitnami/postgresql:latest
    networks:
      - main
    expose:
      - 5432
    restart: "no"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - "POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}"
      - "POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}"
      - "POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}"

  backend:
#    command: sh -c "python manage.py collectstatic --no-input && python manage.py migrate && gunicorn config.wsgi -b 0.0.0.0:8000"
    container_name: backend
    depends_on:
      - postgres
      - redis
    hostname: backend
    image: eyra/comic:latest
    networks:
      - main
    restart: "no"

    environment:
      - "POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}"
      - "POSTGRESQL_HOST=${POSTGRESQL_HOST}"
      - "POSTGRESQL_PORT=${POSTGRESQL_PORT}"
      - "POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}"
      - "POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}"
      - "CELERY_EAGER=${CELERY_EAGER}"
      - "DOMAIN=${DOMAIN}"
      - "ALLOW_ALL_HOSTS=${ALLOW_ALL_HOSTS}"
      - "CELERY_BROKER_URL=${CELERY_BROKER_URL}"
      - "DEBUG=${DEBUG}"
      - "DJANGO_SENTRY_DSN=${DJANGO_SENTRY_DSN}"
      - "SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}"
      - "WHITENOISE=${WHITENOISE}"
      - "CORS_ALLOW_ALL=${CORS_ALLOW_ALL}"

  celery_worker:
    command: sh -c "celery -A config worker -l info"
    container_name: celery_worker
    depends_on:
      - backend
      - postgres
      - redis
    hostname: celery_worker
    image: eyra/comic:latest
    networks:
      - main
    restart: "no"
    environment:
      - "POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}"
      - "POSTGRESQL_HOST=${POSTGRESQL_HOST}"
      - "POSTGRESQL_PORT=${POSTGRESQL_PORT}"
      - "POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}"
      - "POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}"
      - "CELERY_EAGER=${CELERY_EAGER}"
      - "CELERY_BROKER_URL=${CELERY_BROKER_URL}"
      - "DJANGO_SENTRY_DSN=${DJANGO_SENTRY_DSN}"
      - "DEBUG=${DEBUG}"

  celery_beat:
    command: sh -c "celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    container_name: celery_beat
    depends_on:
      - backend
      - postgres
      - redis
    hostname: celery_beat
    image: eyra/comic:latest
    networks:
      - main
    restart: "no"
    environment:
      - "POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}"
      - "POSTGRESQL_HOST=${POSTGRESQL_HOST}"
      - "POSTGRESQL_PORT=${POSTGRESQL_PORT}"
      - "POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}"
      - "POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}"
      - "CELERY_EAGER=${CELERY_EAGER}"
      - "CELERY_BROKER_URL=${CELERY_BROKER_URL}"
      - "DJANGO_SENTRY_DSN=${DJANGO_SENTRY_DSN}"
      - "DEBUG=${DEBUG}"


networks:
  main:

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: $PWD/postgres-data
      o: bind