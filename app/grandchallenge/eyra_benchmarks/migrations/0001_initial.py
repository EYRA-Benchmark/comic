# Generated by Django 2.1.7 on 2019-04-04 11:46

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eyra_algorithms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('eyra_data', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('short_description', models.TextField(default='', help_text='Short description in markdown.')),
                ('description', models.TextField(default='', help_text='Description of this project in markdown.')),
                ('name', models.CharField(help_text='The name of the benchmark', max_length=255)),
                ('admin_group', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benchmark', to='auth.Group')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks', to='eyra_algorithms.Implementation')),
                ('interface', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benchmarks', to='eyra_algorithms.Interface')),
                ('test_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_data.DataFile')),
                ('test_ground_truth_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_data.DataFile')),
                ('training_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_data.DataFile')),
                ('training_ground_truth_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_data.DataFile')),
            ],
            options={
                'verbose_name': 'benchmark',
                'verbose_name_plural': 'benchmarks',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('metrics_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='eyra_algorithms.Implementation')),
                ('algorithm_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_algorithms.Job')),
                ('benchmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eyra_benchmarks.Benchmark')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to=settings.AUTH_USER_MODEL)),
                ('evaluation_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='eyra_algorithms.Job')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
